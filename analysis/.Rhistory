rm(list=ls())
library(ggplot2)
library(dplyr)
library(tidyr)
library(magrittr)
library(RWiener)
library(knitr)
library(bootstrap)
library(gridExtra)
library(effsize)
library(lme4)
library(GGally)
# number of unique subs
n.unique <- function (x) {
length(unique(x))
}
# for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
d.turk <- read.csv("./data/long_data_mturk.csv")
n.turk.initial <- n.unique(d.turk$subid)
d.turk <- d.turk %>%
# remove anyone who played fewer than 300 trials (means they did not complete at least half of the third game) or over 408 trials (means they completed the task twice, because 408 is max number of trials -- this only happened for one participant and I'm not sure how they were able to do this, so I'm rejecting them)
mutate(subid = factor(subid)) %>%
group_by(subid) %>%
mutate(ntrials = n()) %>%
filter(ntrials > 300 & ntrials < 408) %>%
ungroup() %>%
# create resp and rt vars
mutate(resp = factor(response, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000) %>%
# remove outlier RTs
filter(rt > 200,
rt < 15000) %>%
filter(log(rt) < mean(log(rt)) + 3 * sd(log(rt)),
log(rt) > mean(log(rt)) - 3 * sd(log(rt))) %>%
# clean up
select(subid, game, trial.num, trial.type, q, resp) %>%
mutate(agegroup = "adults") %>%
ungroup()
n.turk.final <- n.unique(d.turk$subid)
d.cdm.raw <- read.csv("./data/long_data_cdm.csv") %>%
filter(agegroup == 4 | agegroup == 5 | agegroup == 6)
n.cdm.initial <- n.unique(d.cdm.raw$subid)
d.cdm <- d.cdm.raw %>%
# remove any child who played fewer than 150 trials (means they didn't complete at least half of the final game)
group_by(subid) %>%
mutate(ntrials = n()) %>%
filter(ntrials > 150) %>%
ungroup() %>%
mutate(resp = factor(response, levels=c("Y","N"), labels=c("upper","lower")),
q = rt/1000) %>%
# remove outlier RTs
filter(rt > 200,
rt < 15000) %>%
filter(log(rt) < mean(log(rt)) + 3 * sd(log(rt)),
log(rt) > mean(log(rt)) - 3 * sd(log(rt))) %>%
ungroup()
m_age_comp <- aggregate(age ~ agegroup, d.cdm, mean)
min_age_comp <- aggregate(age ~ agegroup, d.cdm, min)
max_age_comp <- aggregate(age ~ agegroup, d.cdm, max)
d.cdm <- d.cdm %>%
# clean up
select(subid, age, agegroup, game, trial.num, trial.type, q, resp) %>%
mutate(agegroup = factor(agegroup)) %>%
ungroup()
n.cdm.final <- n.unique(d.cdm$subid)
ns.cdm <- aggregate(subid ~ agegroup, d.cdm, n.unique)
d <- bind_rows(d.turk, d.cdm)
d$subid <- factor(d$subid)
d$agegroup <- factor(d$agegroup, levels = c("adults", "4", "5", "6"))
d$trial.labels <- factor(d$trial.type, levels = c("control", "inhib", "unambiguous", "implicature", "positive", "negative"))
d$correct <- as.numeric(as.character(factor(d$resp,
levels=c("upper","lower"),
labels=c("1","0"))))==1
d$trial.type <- factor(d$trial.type %in% c("inhib","implicature","negative"),
levels = c(FALSE, TRUE),
labels = c("control","target"))
d$game <- factor(d$game, levels=c("inhibition","implicature","negation"))
d <- d %>%
mutate(agegroup2 = ifelse(agegroup == "adults", "adults", "kids"))
head(d)
ms.acc <- d %>%
group_by(game, trial.type, subid, agegroup) %>%
summarise(m = mean(correct)) %>%
group_by(game, trial.type, agegroup) %>%
summarise(cih = ci.high(m),
cil = ci.low(m),
m = mean(m))
ms.acc$agegroup <- factor(ms.acc$agegroup,
levels = c("4", "5", "6", "adults"),
labels =  c("4", "5", "6", "Adults"))
ms.acc$trial.type <- factor(ms.acc$trial.type, labels = c("Control", "Target"))
ms.acc$game <- factor(ms.acc$game, labels = c("Inhibition", "Implicature", "Negation"))
ms.acc$kid <- ms.acc$agegroup != "Adults"
qplot(data = ms.acc, x = agegroup, y = m, color = trial.type,
geom = "point", position = position_dodge(.2)) +
geom_errorbar(aes(ymin = cil, ymax = cih),
position = position_dodge(.2), width = 0) +
geom_line(aes(group = interaction(kid,trial.type), col = trial.type)) +
facet_grid( ~ game) +
ylab("Proportion correct") + xlab("Age Group") +
scale_color_hue(name = "Trial Type") +
theme_bw()
d$age
head(d.cdm)
head(d.turk)
head(d)
table(d$age)
